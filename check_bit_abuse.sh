#!/bin/bash
# Script de d√©tection d'abus du bot Telegram
# Analyse les logs pour identifier comportements suspects

echo "=================================================="
echo "üîç ANALYSE LOGS BOT - D√âTECTION D'ABUS"
echo "=================================================="
echo ""

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Analyser les derni√®res 24h de logs
echo "üìÖ Analyse des 24 derni√®res heures..."
echo ""

# 1. Compter les erreurs Telegram
echo "1Ô∏è‚É£  ERREURS TELEGRAM:"
TELEGRAM_ERRORS=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "telegram.error" | wc -l)
echo "   Total erreurs: $TELEGRAM_ERRORS"

if [ $TELEGRAM_ERRORS -gt 100 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  CRITIQUE : >100 erreurs Telegram${NC}"
    echo "   ‚Üí Probable cause de rate limiting"
elif [ $TELEGRAM_ERRORS -gt 50 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  √âLEV√â : >50 erreurs${NC}"
else
    echo -e "   ${GREEN}‚úÖ Normal${NC}"
fi
echo ""

# 2. Compter les timeouts
echo "2Ô∏è‚É£  TIMEOUTS:"
TIMEOUT_COUNT=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "timed out\|timeout" | wc -l)
echo "   Total timeouts: $TIMEOUT_COUNT"

if [ $TIMEOUT_COUNT -gt 50 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  CRITIQUE : >50 timeouts${NC}"
    echo "   ‚Üí Connexion instable ou Telegram bloque"
elif [ $TIMEOUT_COUNT -gt 20 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  √âLEV√â : >20 timeouts${NC}"
else
    echo -e "   ${GREEN}‚úÖ Normal${NC}"
fi
echo ""

# 3. Compter les connexions
echo "3Ô∏è‚É£  CONNEXIONS TELEGRAM:"
CONNECTIONS=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "polling\|updater" | wc -l)
echo "   Tentatives connexion: $CONNECTIONS"

if [ $CONNECTIONS -gt 1000 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  SUSPECT : >1000 tentatives${NC}"
    echo "   ‚Üí Possible boucle de reconnexion"
elif [ $CONNECTIONS -gt 500 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  √âLEV√â : >500 tentatives${NC}"
else
    echo -e "   ${GREEN}‚úÖ Normal${NC}"
fi
echo ""

# 4. Compter les messages envoy√©s
echo "4Ô∏è‚É£  MESSAGES ENVOY√âS:"
SENT_MESSAGES=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "send_message\|sendText" | wc -l)
echo "   Messages envoy√©s: $SENT_MESSAGES"

if [ $SENT_MESSAGES -gt 2000 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  SUSPECT : >2000 messages/jour${NC}"
    echo "   ‚Üí Au-dessus limite Telegram (30/s = 2592000/jour th√©orique)"
elif [ $SENT_MESSAGES -gt 1000 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  √âLEV√â : >1000 messages/jour${NC}"
else
    echo -e "   ${GREEN}‚úÖ Normal${NC}"
fi
echo ""

# 5. D√©tecter les patterns de boucle
echo "5Ô∏è‚É£  PATTERNS SUSPECTS:"
RESTART_LOOPS=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "d√©marrage\|start\|started" | wc -l)
echo "   Red√©marrages: $RESTART_LOOPS"

if [ $RESTART_LOOPS -gt 50 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  CRITIQUE : Bot red√©marre trop souvent${NC}"
    echo "   ‚Üí Probable crash loop"
elif [ $RESTART_LOOPS -gt 10 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  Plusieurs red√©marrages${NC}"
else
    echo -e "   ${GREEN}‚úÖ Normal${NC}"
fi
echo ""

# 6. Derni√®res erreurs
echo "6Ô∏è‚É£  DERNI√àRES ERREURS (10):"
echo "=================================================="
journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "error\|exception" | tail -10 | sed 's/^/   /'
echo ""

# 7. Rate limiting d√©tect√© ?
echo "7Ô∏è‚É£  RATE LIMITING:"
RATE_LIMIT=$(journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "429\|too many\|rate limit" | wc -l)
echo "   D√©tections: $RATE_LIMIT"

if [ $RATE_LIMIT -gt 0 ]; then
    echo -e "   ${RED}‚ö†Ô∏è  CONFIRM√â : Rate limiting d√©tect√©${NC}"
    echo "   ‚Üí Telegram a bloqu√© temporairement le bot"
    echo ""
    echo "   Derni√®res d√©tections:"
    journalctl -u meshtastic-bot --since "24 hours ago" | grep -i "429\|too many\|rate limit" | tail -5 | sed 's/^/      /'
else
    echo -e "   ${GREEN}‚úÖ Aucun rate limiting d√©tect√©${NC}"
fi
echo ""

# 8. Verdict global
echo "=================================================="
echo "üéØ VERDICT GLOBAL"
echo "=================================================="

SCORE=0
[ $TELEGRAM_ERRORS -gt 100 ] && SCORE=$((SCORE + 3))
[ $TELEGRAM_ERRORS -gt 50 ] && SCORE=$((SCORE + 1))
[ $TIMEOUT_COUNT -gt 50 ] && SCORE=$((SCORE + 3))
[ $TIMEOUT_COUNT -gt 20 ] && SCORE=$((SCORE + 1))
[ $CONNECTIONS -gt 1000 ] && SCORE=$((SCORE + 2))
[ $SENT_MESSAGES -gt 2000 ] && SCORE=$((SCORE + 2))
[ $RESTART_LOOPS -gt 50 ] && SCORE=$((SCORE + 3))
[ $RATE_LIMIT -gt 0 ] && SCORE=$((SCORE + 5))

if [ $SCORE -ge 8 ]; then
    echo -e "${RED}üî¥ CRITIQUE${NC}"
    echo "   Le bot a probablement √©t√© rate-limit√© ou banni"
    echo ""
    echo "üí° ACTIONS RECOMMAND√âES:"
    echo "   1. Arr√™ter le bot: sudo systemctl stop meshtastic-bot"
    echo "   2. Attendre 6-24 heures"
    echo "   3. Augmenter poll_interval √† 60s"
    echo "   4. V√©rifier le code pour boucles infinies"
    echo "   5. Contacter @BotSupport si ban permanent"
elif [ $SCORE -ge 4 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  AVERTISSEMENT${NC}"
    echo "   Comportement suspect d√©tect√©"
    echo ""
    echo "üí° ACTIONS RECOMMAND√âES:"
    echo "   1. Augmenter poll_interval √† 60s"
    echo "   2. R√©duire la fr√©quence des commandes"
    echo "   3. Surveiller les logs"
else
    echo -e "${GREEN}‚úÖ NORMAL${NC}"
    echo "   Pas de comportement abusif d√©tect√©"
    echo ""
    echo "üí° Le timeout vient probablement de:"
    echo "   - Connexion r√©seau lente"
    echo "   - Timeouts trop courts (augmenter √† 120s)"
fi
echo ""

# 9. Informations suppl√©mentaires
echo "=================================================="
echo "‚ÑπÔ∏è  INFORMATIONS SUPPL√âMENTAIRES"
echo "=================================================="
echo "Pour plus de d√©tails:"
echo "  ‚Ä¢ Voir tous les logs: journalctl -u meshtastic-bot -n 1000"
echo "  ‚Ä¢ Logs erreurs: journalctl -u meshtastic-bot | grep ERROR"
echo "  ‚Ä¢ Logs temps r√©el: journalctl -u meshtastic-bot -f"
echo ""
echo "Limites Telegram (officielles):"
echo "  ‚Ä¢ 30 messages/seconde par bot"
echo "  ‚Ä¢ 20 appels getUpdates/minute"
echo "  ‚Ä¢ Bans temporaires si abus"
echo ""
